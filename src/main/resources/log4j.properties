############################################################
#  	Default Logging Configuration File
#
# You can use a different file by specifying a filename
# with the java.util.logging.config.file system property.  
# For example java -Djava.util.logging.config.file=myfile
############################################################

############################################################
#  	Global properties
############################################################

# "handlers" specifies a comma separated list of log Handler 
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
#handlers= java.util.logging.ConsoleHandler

# To also add the FileHandler, use the following line instead.
#-handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
.level = INFO

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################

# default file output is in user's home directory.
#-java.util.logging.FileHandler.pattern = ${shapeshifting-tv.rootPath}logs/ShapeShift.log
#java.util.logging.FileHandler.limit = 50000
#-java.util.logging.FileHandler.count = 1
#-java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter
#java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter

# Limit the message that are printed on the console to INFO and above.
#-java.util.logging.ConsoleHandler.level = INFO
#-java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# vilmos
log4j.rootLogger = DEBUG, stdout, shapeshifting-out

log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = %5p %d{HH:mm:ss,SSS} [%t] (%F:%L) - %m%n

log4j.appender.shapeshifting-out = org.apache.log4j.RollingFileAppender
log4j.appender.shapeshifting-out.File = ${shapeshifting-tv.rootPath}logs/shapeshifting-console.log
log4j.appender.shapeshifting-out.MaxFileSize = 2048KB
log4j.appender.shapeshifting-out.MaxBackupIndex = 1
log4j.appender.shapeshifting-out.layout = org.apache.log4j.PatternLayout
log4j.appender.shapeshifting-out.layout.ConversionPattern = %5p %d{HH:mm:ss,SSS} [%t] (%F:%L) - %m%n

############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################

# For example, set the com.xyz.foo logger to only log SEVERE
# messages:
log4j.logger.com.hp = WARN
log4j.logger.org.apache = WARN

